import { useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';

import { CircularProgress } from '@mui/material';
import Box from '@mui/material/Box';
import { getQuizzInfo } from '../../../lib/quizzs';
import Logo from '@/components/header/logo';
import { useQRCode } from 'next-qrcode';

function QRCode({ url }) {
	const { Canvas } = useQRCode();

	return (
		<Canvas
			text={url}
			options={{
				errorCorrectionLevel: 'M',
				margin: 3,
				scale: 4,
				width: 400,
				color: {
					dark: '#696f79',
					light: '#fff',
				},
			}}
		/>
	);
}

export default function Link({ quizz, url }) {
	const router = useRouter();

	const quizzInfoArray = Object.entries(quizz.quizzInfo);

	return (
		<>
			<Head>
				<title>Quizzoto - {quizz.quizzTitle}</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
				<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
				<link rel="preconnect" href="https://fonts.googleapis.com" />
				<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
				<link href="https://fonts.googleapis.com/css2?family=Anta&family=Bebas+Neue&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet" />
			</Head>
			<main>
				<Box sx={{ display: 'flex', flexFlow: 'column', justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontFamily: 'Poppins', paddingTop: '12vh', height: '78vh' }}>
					<Logo scale={12} />
					<QRCode url={url} />
					<h1 style={{ fontSize: '5vh' }}>{quizz.quizzTitle}</h1>
					<p style={{ fontSize: '1.5vh' }}>{quizz.quizzDescription}</p>
					{/* <table>
						<thead>
							<tr>
								{quizzInfoArray.map(([key, value]) => (
									<td key={key}>{key}</td>
								))}
							</tr>
						</thead>
						<tbody>
							<tr>
								{quizzInfoArray.map(([key, value]) => (
									<td key={key}>{value}</td>
								))}
							</tr>
						</tbody>
					</table> */}
					<a href={url} style={{ marginBottom: '10vh' }}>
						{url}
					</a>
				</Box>
			</main>
		</>
	);
}

export async function getServerSideProps(context) {
	const { link } = context.params;

	try {
		const quizz = await getQuizzInfo(link);
		const url = context['req']['headers']['x-forwarded-proto'] + '://' + context.req.headers.host + quizz.link;

		return {
			props: {
				quizz,
				url,
			},
		};
	} catch {
		return {
			props: {
				quizz: null,
			},
		};
	}
}
